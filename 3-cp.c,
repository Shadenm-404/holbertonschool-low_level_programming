/* 3-cp.c
 *
 * Copy the contents of one file to another.
 * Usage: cp file_from file_to
 *
 * Exit codes:
 * 97  -> wrong arg count
 * 98  -> can't read from file_from
 * 99  -> can't write to file_to / can't create
 * 100 -> can't close a file descriptor
 *
 * Requirements met:
 * - read 1024 bytes at a time (buffer)
 * - truncate destination if it exists
 * - create with perms 0664 (rw-rw-r--)
 * - use dprintf to POSIX stderr (STDERR_FILENO)
 * - check read/write/close errors
 * - only allowed syscalls in ltrace
 */

#include <stdio.h>      /* dprintf */
#include <stdlib.h>     /* exit */
#include <unistd.h>     /* read, write, close, STDERR_FILENO */
#include <fcntl.h>      /* open */
#include <sys/stat.h>   /* mode constants */

#define BUF_SIZE 1024

/**
 * close_or_die - close fd or exit with code 100
 * @fd: file descriptor to close
 */
static void close_or_die(int fd)
{
	if (close(fd) == -1)
	{
		dprintf(STDERR_FILENO, "Error: Can't close fd %d\n", fd);
		exit(100);
	}
}

/**
 * main - entry point
 * @argc: argument count
 * @argv: argument vector
 * Return: 0 on success, exits on error with specific codes
 */
int main(int argc, char *argv[])
{
	int fd_from, fd_to;
	ssize_t r, w, off;
	char buf[BUF_SIZE];

	if (argc != 3)
	{
		dprintf(STDERR_FILENO, "Usage: cp file_from file_to\n");
		exit(97);
	}

	fd_from = open(argv[1], O_RDONLY);
	if (fd_from == -1)
	{
		dprintf(STDERR_FILENO, "Error: Can't read from file %s\n", argv[1]);
		exit(98);
	}

	/* If created, set perms to 0664; if exists, truncate but keep its perms unchanged */
	fd_to = open(argv[2], O_WRONLY | O_CREAT | O_TRUNC, 0664);
	if (fd_to == -1)
	{
		dprintf(STDERR_FILENO, "Error: Can't write to %s\n", argv[2]);
		close_or_die(fd_from);
		exit(99);
	}

	while ((r = read(fd_from, buf, BUF_SIZE)) > 0)
	{
		off = 0;
		while (off < r)
		{
			w = write(fd_to, buf + off, (size_t)(r - off));
			if (w == -1)
			{
				dprintf(STDERR_FILENO, "Error: Can't write to %s\n", argv[2]);
				close_or_die(fd_from);
				close_or_die(fd_to);
				exit(99);
			}
			off += w;
		}
	}

	if (r == -1)
	{
		dprintf(STDERR_FILENO, "Error: Can't read from file %s\n", argv[1]);
		close_or_die(fd_from);
		close_or_die(fd_to);
		exit(98);
	}

	close_or_die(fd_from);
	close_or_die(fd_to);
	return (0);
}
